%== Уёбищные сокращения автора
/bd{bind def}bind def

/ed{exch def}bd

%===

/Rf  {
	20 slw 1 setlinejoin 1 setlinecap /Cyr30vk f
} bd

/R  {
	14 Rf 2 1 rm s -1 -1 rm
}  bd

/Ec  {
	Encoding
}  bd

/mW {
169 def
} bd

 /mw {
147 def
} bd

 /mn {
125 def
} bd

/bW {
	[-35 -35 134 155] def
} bd

/bw{
	[-35 -35 112 155] def
} bd

 /bn{
	[-35 -35 90 155] def
} bd

%% ------ Russian font /Cyr30vk -------
10 dict dup begin
%Оно начинается с объявления словаря размером 10 элементов.
%Порядок элементов необходимо такой
% FontType {int} == 3
% FontMatrix {Array[6]<num>}
% FontBBox {Array[4]<num>}
% Encoding {Array[N]<name>} N<=256 Отображает ASCII код символа на его ключ в словарях
% Metrics {Dict<name.num>} ширина символов
% BBox {Dict<name.Array[4]<num>>} Bounding Box для каждого символа индивидуально
% CharProcs {Dict<name.proc>} Процедуры рисования символов
% BuildGlyph
% BuildChar % LanguageLevel 1 compatibility
% UniqueID


	/FontType 3 def %Тип 3 означает, что буквы написаны обычными графическими процедурами Постскрипта
	/FontMatrix [0.0042 0 0 0.0046 0 0] def % Матрица афинного преобразования //TODO Зачем?
	/FontBBox [-35 -35 134 155] def % Bounding Box для рисования символов //TODO Что это?
	/Encoding 128 array def %массив, отображающий номера символов ASCII на имена символов
	
	0 1 127 {
		%Ec - это псевдоним Encoding
		Ec exch /.notdef 
		%[Encoding, index, /.notdef]
		put
	} for %заполняем массив именами?
	
	Ec 65 /A put 
	Ec 97 /a put
	
	/Metrics 3 dict def 
	Metrics begin
		/.notdef mn 
		/A mw 
		/a mn 
	end
	
	/BBox 3 dict def 
	BBox begin
		/.notdef [0 0 0 0] def 
		/A bw 
		/a bn 
	end
	
	/CharProcs 3 dict def 
	CharProcs begin
		/.notdef {} def 
		
		/A {
			0 0 m 50 140 l 100 0 l sl 22 50 78 50 ls
		} bd
		/a {
			0 85 m 30 110 60 110 76 85 c 76 15 79 0 83 0 c sl 70 65 m -30 65 -10 -50 76 30 c sl
		} bd
	end
	
	%[fontdict, char]
	/BuildChar {
		0 begin 
				%char - index for array, may be ASCII code of symbol
			/char ed 
				%fontdict - font like dict, may by this
			/fontdict ed 
			
			/charn 
				fontdict /Encoding get
				%[/charn, {array}Encoding]
				char 
				%[/charn, {array}Encoding, {int}char]
				get 
				%[/charn, /name-from-encoding]
			def 
			% Теперь в charn лежит ключ для словарей с процедурами
			fontdict begin 
				Metrics charn get 
				0 
				BBox charn get 
				aload %вытряхнуть массив в стек, и поставить следом ссылку на исходный массив
				pop %дропнуть ссылку на массив
				%[metric, 0, bbox[0] ... bbox[3]]
				setcachedevice %применить всю эту бороду
				CharProcs charn get exec %
			end
		end
	} def
	
	/BuildChar load 
	%[{exec}BuildChar]
	0 
	3 dict 
	%[{exec}BuildChar, 0, dict]
	put 
	
	/UniqueID 1 def 
end

/Cyr30vk exch definefont pop %видимо, стандартная конструкция
%% --- end of font --------