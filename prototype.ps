%Разворачивает в стек словарей цепочку прототипов словаря из стека операндов
%[dict]
/superbegin{
	mark exch
	%[mark, dict]
	{
		%[..., dict]
		dup /prototype known not
		%[mark, dict, known]
		{
			exit
		}
		if
		dup /prototype get
	}loop
	
	%[mark, dict, ..., dict]
	{
		dup mark eq
		{
			%[mark]
			pop
			exit
		}
		if
		
		%[mark, ..., dict]
		begin
		%[mark, ...]
		
	}loop
} def

%[Выталкивает из стека словарей все словари, положенные туда процедурой superbegin
/superend{
	{
		currentdict /prototype known not
		{
			end
			exit
		}
		if
		currentdict /prototype known get
		end
		currentdict has not
		{
			(Incorrect prototype link in previous current dict) ==
			quit
		}
		if
	}
	loop
} def

%[proto, count]
/superdict {
	dict dup 3 2 roll
	%[dict, dict, proto]
	/prototype exch
	%[dict, dict, /prototype, proto]
	put
	%[dict]
} def