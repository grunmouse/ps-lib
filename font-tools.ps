%% Набор процедур, рисующих характерные, встречающиеся в шрифтах элементы
(math.ps) stealfile


	%% @private
	%% Процедура подготовик данных для рисования дуги квадранта
	%[r, sgndx, sgndy]
	/preparct {
		2 index mul
		%[r, sgndx, dy]
		exch
		2 index mul
		%[r, dy, dx]
		currentpoint
		%[r, dy, dx, x0, y0]
		4 1 roll
		%[r, y0, dy, dx, x0]
		add
		%[r, y0, dy, xn]
		3 1 roll
		%[r, xn, y0, dy]
		add
		%[r, x2, y2]
	} def
	
	%Рисует дугу квадранта из точки currentpoint в точку с координатами currentpoint + r{sgndx, sgndy}, начиная по вертикали
	%[r, sgndx, sgndy]
	/arcty {
		preparct
		%[r, x2, y2]
		currentpoint
		%[r, x2, y2, x0, y0]
		%x1 = x0, y1 = y2
		pop
		%[r, x2, y2, x0]
		3 1 roll
		%[r, x0, x2, y2]
		%[r, x0, x2, y2, y2]
		dup
		3 1 roll
		%[r, x0, y2, x2, y2]
		5 -1 roll
		%[x1, y1, x2, y2, r]
		%5 copy (r) == == (2yx) == == == (1yx) == == ==
		arct
	} def
	
	%Рисует дугу квадранта из точки currentpoint в точку с координатами currentpoint + r{sgndx, sgndy}, начиная по горизонтали
	%[r, sgndx, sgndy]
	/arctx {
		preparct
		%3 copy (pre 2yx) == == == (pre r) == ==
		%[r, x2, y2]
		currentpoint
		%x1 = x2, y1 = y0
		%[r, x2, y2, x0, y0]
		3 1 roll
		%[r, x2, y0, y2, x0]
		pop
		%[r, x2, y0, y2]
		2 index
		%[r, x2, y0, y2, x2]
		exch
		%[r, x2, y0, x2, y2]
		5 -1 roll
		%[x1, y1, x2, y2, r]
		%5 copy (r) == == (2) == == == (1) == == ==
		arct
	} def
	
	%% Рисует крюк, состоящий из горизонтальной линии и дуги квадратна
	%% Конец крюка будет располагаться на абсциссе x и ординате r*sgny
	%[x, r, sgny]
	/xlinearc {
		%%x0 = curx + sign(x - curx)*(abs(x - curx) - r)
		%x0 = x - sign(x - curx)*r
		%y0 = cury
		%x1 = x; y1 = cury
		%x2 = x; y2 = cury + sgny*r
		1 index
		%2 copy (x) == == ==
		mul				%[x, r, r*sgny]
		
		2 index
		dup
		currentpoint	%[x, r, r*sgny, x, x, curx, cury]
		5 1 roll		%[x, r, cury, r*sgny, x, x, curx]
		sub				%[x, r, cury, r*sgny, x, x - curx]
		sign				%[x, r, cury, r*sgny, x, sign(x - curx)]
		4 index			%[x, r, cury, r*sgny, x, sign(x - curx), r]
		mul				%[x, r, cury, r*sgny, x, sign(x - curx)*r]
		sub				%[x, r, cury, r*sgny, x0]
		2 index			%[x, r, cury, r*sgny, x0, cury]
		lineto			%[x, r, cury, r*sgny]
		
		1 index			%[x, r, cury, r*sgny, cury]
		add				%[x, r, cury, y2]
		3 index			%[x, r, cury, y2, x]
		exch			%[x, r, cury, x, y2]
		4 -1 roll		%[x, cury, x, y2, r]
		%[x1, y1, x2, y2, r]
		%5 copy (r) == == (2) == == == (1) == == ==
		arct
	} def
	
	%% Рисует крюк, состоящий из вертикальной линии и дуги квадратна
	%% Конец крюка будет располагаться по координатам {r*sgnx, y}
	%[y, r, sgnx]
	/ylinearc {
		%y0 = y - sign(y - cury)*r
		%x0 = curx
		%y1 = y; x1 = curx
		%y2 = y; x2 = curx + sgnx*r
		1 index
		%2 copy (y) == == ==
		mul				%[y, r, r*sgnx]
		
		2 index
		dup
		currentpoint	%[y, r, r*sgnx, y, y, curx, cury]
		exch			%[y, r, r*sgnx, y, y, cury, curx]
		7 1 roll		%[curx, y, r, r*sgnx, y, y, cury]
		sub				%[curx, y, r, r*sgnx, y, y - curx]
		sign				%[curx, y, r, r*sgnx, y, sign(y - cury)]
		3 index			%[curx, y, r, r*sgnx, y, sign(y - cury), r]
		mul				%[curx, y, r, r*sgnx, y, sign(y - cury)*r]
		sub				%[curx, y, r, r*sgnx, y0]
		4 index exch	%[curx, y, r, r*sgnx, curx, y0]
		%[curx, y0]
		%[x0, y0]
		lineto			%[curx, y, r, r*sgnx]
		%currentpoint == ==
		3 index			%[curx, y, r, r*sgnx, curx]
		add				%[curx, y, r, x2]
		2 index			%[curx, y, r, x2, y]
		3 -1 roll		%[curx, y, x2, y, r]
		%[curx, y, x2, y, r]
		%[x1, y1, x2, y2, r]
		%5 copy (r) == == (2) == == == (1) == == ==
		arct
	} def

	/xlinearcup {
		1 xlinearc
	} def
	/xlinearcdown {
		-1 xlinearc
	} def
	/ylinearcleft {
		-1 ylinearc
	} def
	
	/ylinearcright {
		1 ylinearc
	} def
	
	% Рисует прямоугольник со скруглёнными углами
	% r - радиус скругления
	% right, top - координаты верхнего правого угла
	%[r, right, top]
	/glifo {
		%(o) ==
		6 dict begin
		
			currentpoint	%[r, right, top, left, bottom]
			/bottom exch def
			/left exch def
			/top exch def	%[right]
			dup left add 2 div
			/center exch def
			/right exch def
			/r exch def
		
			center bottom moveto
			right r xlinearcup
			top r ylinearcleft
			left r xlinearcdown
			bottom r ylinearcright
			center bottom lineto
		end
	} def
	
	% Рисует букву C в виде швеллера со скруглёнными углами, начиная из верхнего правого конца
	% r - радиус скругления
	% left, bottom - координаты нижнего левого конца
	%[r, left, bottom]
	/glifc {
		4 dict begin
			currentpoint
			pop
			/right exch def
			/bottom exch def
			/left exch def
			/r exch def

			left r xlinearcdown
			bottom r ylinearcright
			right bottom lineto
		end
	} def
	
	% Рисует отражённую вправо букву C в виде швеллера со скруглёнными углами, начиная из нижнего левого конца
	% r - радиус скругления
	% right, top - координаты верхнего правого конца
	%[r, right, top]
	/glifrc {
		4 dict begin
			currentpoint
			pop
			/left exch def
			/top exch def
			/right exch def
			/r exch def
			right r xlinearcup
			top r ylinearcleft
			left top lineto
		end
	} def
	
	%[right, top]
	/glifx {
		4 dict begin
			currentpoint
			/bottom exch def
			/left exch def
			2 copy
			/top exch def
			/right exch def
			lineto
			0 left moveto
			right 0 lineto
		end
	} def
	
	/glifz {
		4 dict begin
			currentpoint
			/top exch def
			/left exch def
			/bottom exch def
			/right exch def
			
			right top lineto
			left bottom lineto
			right bottom lineto
		end
	} def
	
	/glifn {
		4 dict begin
			currentpoint
			/top exch def
			/left exch def
			/bottom exch def
			/right exch def
			
			right top lineto
			left bottom lineto
			right bottom lineto
		end
	} def